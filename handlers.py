from telebot import types
import datetime
import text
import schedule


class SimpleUser:
    @staticmethod
    def start(message, bot):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("üìö –£—Ä–æ–∫–∏ —Å–µ–≥–æ–¥–Ω—è")
        btn2 = types.KeyboardButton("‚ùì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id, text=text.START_GREETING, reply_markup=markup)

    @staticmethod
    def info(message, bot):
        markup = types.InlineKeyboardMarkup()
        button1 = types.InlineKeyboardButton("–°–≤—è–∑—å —Å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º.", url='https://t.me/oblivisheee')
        markup.add(button1)
        bot.send_message(message.chat.id, text=text.INFO_BOT.format(message.from_user), reply_markup=markup)

    @staticmethod
    def lesson_day(message, bot, lesson_output):
        today_schedule = lesson_output.get_today_schedule()
        if isinstance(today_schedule, list):
            if today_schedule:
                schedule_message = f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {text.DAY_MAPPING_CORRECTED[datetime.datetime.now().strftime('%A').lower()]}:\n"
                for lesson in today_schedule:
                    lesson_number = lesson.get('—É—Ä–æ–∫', '–£—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω').split()[-1]
                    lesson_name = lesson.get(f"—É—Ä–æ–∫ {lesson_number}", '–£—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω')
                    schedule_message += f"–£—Ä–æ–∫ {lesson_number}: {lesson_name} ({lesson['–≤—Ä–µ–º—è']})\n"
                bot.send_message(message.chat.id, schedule_message)
            else:
                bot.send_message(message.chat.id, "–£—Ä–æ–∫–∏ –Ω–µ –±—ã–ª–∏ –Ω–∞–π–¥–µ–Ω—ã.")
        else:
            bot.send_message(message.chat.id, text.ERROR_LESSON_NOT_FOUND)


def update_today():
    today = datetime.datetime.now().strftime('%A').lower()
    return today


schedule.every().day.at("00:00").do(update_today)

import threading

thread = threading.Thread(target=lambda: schedule.every(1).seconds.do(lambda: None))
thread.start()